#!/bin/bash

# uncomment the next line to see exactly what happens
# set -x

# elements of bad style: lots of cloned code.

# command line inputs:
# $1 : benchmark list filename

#JAVADIR=/opt/sun-jdk-1.4.2.05
#JOOSDIR=/home/user/hendren/JOOS1.1
#JJOOSDIR=/home/user/hendren/SableCC/JJOOS3
#SABLECCDIR=/home/user/hendren/SableCC/sablecc-3-beta.3
#WIGDIR=/home/user/hendren/WIG

PATH=${PATH}:${HOME}/bin:${JOOSDIR}/bin:${JAVADIR}/bin:${WIGDIR}/bin:${JOOSDIR}/a-
CLASSPATH=.:${JOOSDIR}/jasmin/classes:${JOOSDIR}/jooslib.jar
root_dir=`pwd`
#HOSTTYPE=i386-linux

for bench in `cat $1 | cut -f1 | xargs echo`
  do
  bench_dir=`grep $bench $1 | cut -f2`
  bench_main=`grep $bench $1 | cut -f3`
  echo BENCHMARK ${bench} ${bench_dir} ${bench_main}
  
  cd ${bench_dir}
  
  find . -type f -name '*.class' | xargs rm -f
  find . -type f -name '*.j' | xargs rm -f

  rm -rf javac-opt-classes
  rm -rf aminus-opt-classes
  rm -rf aplus-opt-classes
  mkdir javac-opt-classes

  echo "  compiling with javac -O                  (.java --> .class)"
  javac -source 1.4 -classpath ${CLASSPATH} -O -d javac-opt-classes *.java
  javac -source 1.4 -classpath ${CLASSPATH} -O -d . *.java
  
  cp -R javac-opt-classes aminus-opt-classes
  cp -R javac-opt-classes aplus-opt-classes
  cd javac-opt-classes
  echo "  disassembling with D-Java                (.class --> .j)"
  echo "  disassembling with D-Java                (.class --> .sj)"
  for file in *.class
    do
    short=`echo ${file} | sed -e 's/.class//'`
    d-java-${OSTYPE} -o jasmin ${short} > ${short}.j
    d-java-${OSTYPE} -b -o jasmin ${short} > ${short}.sj
  done
  cd ..

  echo "  compiling with a-joos -O                 (.java --> .j)"
# ls *.java *.joos ${JOOSDIR}/Extern/*.joos \
  ls *.java *.joos 2> /dev/null \
      | xargs ${JOOSDIR}/bin/joosa- -O > aminus-opt-classes/frequencies
  mv *.j aminus-opt-classes
  cd aminus-opt-classes
  rm *.class
  echo "  assembling with jasmin                   (.j --> .class)"
  ${JAVADIR}/bin/java -classpath ${CLASSPATH} jasmin.Main *.j > jasmin.out
  echo "  disassembling with D-Java                (.class --> .sj)"
  for file in *.class
    do
    short=`echo ${file} | sed -e 's/.class//'`
    d-java-${OSTYPE} -b -o jasmin ${short} > ${short}.sj
  done
  cd ..

  echo "  compiling with a+joos -O                 (.java --> .j)"
# ls *.java *.joos ${JOOSDIR}/Extern/*.joos \
  ls *.java *.joos ${JOOSDIR}/joos/extern/*.joos 2> /dev/null \
      | xargs ${JOOSDIR}/bin/joosa+-$OSTYPE -O > aplus-opt-classes/frequencies
  mv *.j aplus-opt-classes
  cd aplus-opt-classes
  rm *.class
  echo "  assembling with jasmin                   (.j --> .class)"
  ${JAVADIR}/bin/java -classpath ${CLASSPATH} jasmin.Main *.j > jasmin.out
  echo "  disassembling with D-Java                (.class --> .sj)"
  for file in *.class
    do
    short=`echo ${file} | sed -e 's/.class//'`
    d-java-${OSTYPE} -b -o jasmin ${short} > ${short}.sj
  done
  cd ..

  find . -type f -name '*.class' | grep -v -E 'classes/' | xargs rm -f

  CLASSFILENAME=${bench_main}.class
  cd javac-opt-classes
  if [ -e ${CLASSFILENAME} ]; then
  	  echo "  running javac-opt benchmark" 	      
          cp ../* . 2>/dev/null #copy resources
  	  java -cp ${CLASSPATH} ${bench_main} < ../in1 > out.javac
  	  diff -u ../out1 out.javac
  else
      echo "  NO ${bench_main}.class generated by javac, skip testing"	
  fi
  cd ..

  cd aminus-opt-classes
  if [ -e ${CLASSFILENAME} ]; then
	  echo "  running a-joos-opt benchmark"
          cp ../* . 2>/dev/null #copy resources
	  java -cp ${CLASSPATH} ${bench_main} < ../in1 > out.a-joos
	  diff -u ../out1 out.a-joos
  else 
      echo "  NO ${bench_main}.class generated by a-joos, skip testing"	
  fi
  cd ..

  cd aplus-opt-classes
  if [ -e ${CLASSFILENAME} ]; then
	  echo "  running a+joos-opt benchmark"
          cp ../* . 2>/dev/null #copy resources
	  java -cp ${CLASSPATH} ${bench_main} < ../in1 > out.a+joos
	  diff -u ../out1 out.a+joos
  else
      echo "  NO ${bench_main}.class generated by a+joos, skip testing"	
  fi
  cd ..
    
  cd ${root_dir}
  echo
done
